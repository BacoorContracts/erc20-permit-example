/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Governance,
  GovernanceInterface,
} from "../../contracts/Governance";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "treasury_",
        type: "address",
      },
      {
        internalType: "address",
        name: "verifier_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Governance__InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Governance__Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "Governance__UnregisteredToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "registed",
        type: "bool",
      },
    ],
    name: "PaymentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to_",
        type: "address",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "acceptedPayments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "unregisterToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "marketplace_",
        type: "address",
      },
    ],
    name: "updateMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "treasury_",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verifier_",
        type: "address",
      },
    ],
    name: "updateVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161073a38038061073a83398101604081905261002f91610130565b610038336100c4565b816001600160a01b038116610060576040516399f1dce760e01b815260040160405180910390fd5b816001600160a01b038116610088576040516399f1dce760e01b815260040160405180910390fd5b610091336100c4565b5050600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610163565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461012b57600080fd5b919050565b6000806040838503121561014357600080fd5b61014c83610114565b915061015a60208401610114565b90509250929050565b6105c8806101726000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461013f57806397fc007c14610150578063abc8c7af14610163578063acec3fe814610176578063eb636317146101a9578063f2fde38b146101bc57600080fd5b806309824a80146100b95780632b7ac3f3146100ce57806361d027b3146100fe578063715018a61461011157806377860cdd146101195780637f51bb1f1461012c575b600080fd5b6100cc6100c7366004610562565b6101cf565b005b6002546100e1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100e1906001600160a01b031681565b6100cc61025d565b6100cc610127366004610562565b610271565b6100cc61013a366004610562565b610307565b6000546001600160a01b03166100e1565b6100cc61015e366004610562565b610394565b6003546100e1906001600160a01b031681565b610199610184366004610562565b60046020526000908152604090205460ff1681565b60405190151581526020016100f5565b6100cc6101b7366004610562565b6103e7565b6100cc6101ca366004610562565b61043a565b6101d76104b8565b806001600160a01b0381166101ff576040516399f1dce760e01b815260040160405180910390fd5b6001600160a01b038216600081815260046020908152604091829020805460ff1916600190811790915591519182527fcec8698ba66099b9a74d767cea0e3d422b6dd361f98fea24113f39a3a24dabce910160405180910390a25050565b6102656104b8565b61026f6000610512565b565b6102796104b8565b6001600160a01b03811660009081526004602052604090205460ff166102b25760405163c29019d160e01b815260040160405180910390fd5b6001600160a01b0381166000818152600460209081526040808320805460ff19169055519182527fcec8698ba66099b9a74d767cea0e3d422b6dd361f98fea24113f39a3a24dabce910160405180910390a250565b61030f6104b8565b806001600160a01b038116610337576040516399f1dce760e01b815260040160405180910390fd5b6001546040516001600160a01b038085169216907f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a90600090a350600180546001600160a01b0319166001600160a01b0392909216919091179055565b61039c6104b8565b806001600160a01b0381166103c4576040516399f1dce760e01b815260040160405180910390fd5b50600280546001600160a01b0319166001600160a01b0392909216919091179055565b6103ef6104b8565b806001600160a01b038116610417576040516399f1dce760e01b815260040160405180910390fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055565b6104426104b8565b6001600160a01b0381166104ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104b581610512565b50565b6000546001600160a01b0316331461026f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561057457600080fd5b81356001600160a01b038116811461058b57600080fd5b939250505056fea26469706673582212208e552bf5f633646cdd21cecb57ae1c0d6889fe8bdfbedbf68310a1ca1502ab9f64736f6c634300080f0033";

type GovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Governance__factory extends ContractFactory {
  constructor(...args: GovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    treasury_: PromiseOrValue<string>,
    verifier_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Governance> {
    return super.deploy(
      treasury_,
      verifier_,
      overrides || {}
    ) as Promise<Governance>;
  }
  override getDeployTransaction(
    treasury_: PromiseOrValue<string>,
    verifier_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(treasury_, verifier_, overrides || {});
  }
  override attach(address: string): Governance {
    return super.attach(address) as Governance;
  }
  override connect(signer: Signer): Governance__factory {
    return super.connect(signer) as Governance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceInterface {
    return new utils.Interface(_abi) as GovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Governance {
    return new Contract(address, _abi, signerOrProvider) as Governance;
  }
}
