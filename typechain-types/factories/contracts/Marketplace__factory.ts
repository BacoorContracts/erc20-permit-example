/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../contracts/Marketplace";

const _abi = [
  {
    inputs: [],
    name: "MPI__DelegatecallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "MPI__NonZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MPI__Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "MP__ExecutionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "MP__InvalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "MP__LengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "MP__PaymentFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "MP__Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "RU__Expired",
    type: "error",
  },
  {
    inputs: [],
    name: "RU__InsufficientPayment",
    type: "error",
  },
  {
    inputs: [],
    name: "RU__InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "RU__PaymentUnsuported",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "BulkRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
    ],
    name: "GovernanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "ItemRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "contract IGovernance",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "serviceFeeNumerator_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "deadline",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct ReceiptUtil.User",
                name: "buyer",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "deadline",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct ReceiptUtil.User",
                name: "seller",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "nftContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
            ],
            internalType: "struct ReceiptUtil.Header",
            name: "header",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unitPrice",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "tokenURI",
                type: "string",
              },
            ],
            internalType: "struct ReceiptUtil.Item",
            name: "item",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ReceiptUtil.Receipt",
        name: "receipt_",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature_",
        type: "bytes",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "deadline",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct ReceiptUtil.User",
                name: "buyer",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "deadline",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct ReceiptUtil.User",
                name: "seller",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "nftContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
            ],
            internalType: "struct ReceiptUtil.Header",
            name: "header",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "tokenIds",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "unitPrices",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "tokenURIs",
                type: "string[]",
              },
            ],
            internalType: "struct ReceiptUtil.Bulk",
            name: "bulk",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ReceiptUtil.BulkReceipt",
        name: "receipt_",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature_",
        type: "bytes",
      },
    ],
    name: "redeemBulk",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr_",
        type: "address",
      },
    ],
    name: "updateGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612bb5806100206000396000f3fe60806040526004361061009c5760003560e01c80638456cb59116100645780638456cb5914610144578063b256126314610159578063cd6dc68714610179578063e536007e14610199578063f851a440146101ac578063ffa1ad74146101e457600080fd5b80632d81b65e146100a15780633f4ba83a146100ca57806348ac10b3146100e15780635c975abb146100f45780637ecebe0014610117575b600080fd5b3480156100ad57600080fd5b506100b760cc5481565b6040519081526020015b60405180910390f35b3480156100d657600080fd5b506100df610218565b005b6100df6100ef366004612192565b610232565b34801561010057600080fd5b5060675460ff1660405190151581526020016100c1565b34801561012357600080fd5b506100b7610132366004612210565b60cd6020526000908152604090205481565b34801561015057600080fd5b506100df61056c565b34801561016557600080fd5b506100df610174366004612210565b610584565b34801561018557600080fd5b506100df61019436600461222d565b6105df565b6100df6101a7366004612192565b6106f4565b3480156101b857600080fd5b506099546101cc906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b3480156101f057600080fd5b506100b77f58166ef1331604f9d1096f21021b62681af867d090bf7bef436de91286e1ed6781565b610220610aaa565b610228610af3565b610230610b9b565b565b61023a610bed565b6002609a54036102915760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002609a556099546001600160a01b031660006102b2610180860186612259565b6102bb906123bf565b90506000816040015182600001516102d391906123e1565b905060006102e6368890038801886124f1565b90506000816000015160000151905061032785828460600151868c6101c0013561032061031b8f6103169061250e565b610c33565b610cc9565b8d8d610d1d565b602082015151610354816001600160a01b0316600090815260cd6020526040902080546001810190915590565b5060208086015160408501518551928301519192909160ff16156103f15785606001516001600160a01b031663d505accf86308a85604001518660200151876060015188608001516040518863ffffffff1660e01b81526004016103be979695949392919061257d565b600060405180830381600087803b1580156103d857600080fd5b505af11580156103ec573d6000803e3d6000fd5b505050505b600061046a868b6001600160a01b03166361d027b36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045991906125be565b87868b6060015160cc548a8f610e06565b9050806104db57885160608a015160405163bb7fde7160e01b81526001600160a01b0386169263bb7fde71926104a8928a928a929091600401612633565b600060405180830381600087803b1580156104c257600080fd5b505af11580156104d6573d6000803e3d6000fd5b505050505b50506104f430858584868c600001518b60200151610ec0565b81846001600160a01b0316826001600160a01b03167f5e58d45af34034e95cda757ec0b20711693553c2d12029d12c8821f992c4b0e388606001518a6040516105529291906001600160a01b03929092168252602082015260400190565b60405180910390a450506001609a55505050505050505050565b610574610bed565b61057c610af3565b61023061113d565b61058c610af3565b6105958161117a565b609980546001600160a01b0319166001600160a01b0383169081179091556040517f9d3e522e1e47a2f6009739342b9cc7b252a1888154e843ab55ee1c81745795ab90600090a250565b600054610100900460ff16158080156105ff5750600054600160ff909116105b806106195750303b158015610619575060005460ff166001145b61067c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610288565b6000805460ff19166001179055801561069f576000805461ff0019166101001790555b6106a983836111a4565b80156106ef576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6106fc610bed565b6002609a540361074e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610288565b6002609a55600080610764610180860186612259565b61076d90612779565b80515190915060005b818110156107d8578260400151818151811061079457610794612824565b6020026020010151836000015182815181106107b2576107b2612824565b60200260200101516107c491906123e1565b6107ce908561283a565b9350600101610776565b50506099546001600160a01b031660006107f7368890038801886124f1565b80515160608201519192509061081e9084908390886101c08d013561032061031b8f61123e565b6020820151805161084c816001600160a01b0316600090815260cd6020526040902080546001810190915590565b508351805160208201519091309160ff16156108e15786606001516001600160a01b031663d505accf84848d85604001518660200151876060015188608001516040518863ffffffff1660e01b81526004016108ae979695949392919061257d565b600060405180830381600087803b1580156108c857600080fd5b505af11580156108dc573d6000803e3d6000fd5b505050505b5060008660400151905061095f886001600160a01b03166361d027b36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095091906125be565b8486848b606001518f8f6112cc565b604080860151602087015160608801516080890151935163bc68fe3160e01b81526001600160a01b0386169463bc68fe31946109a49490938b938a9390600401612852565b600060405180830381600087803b1580156109be57600080fd5b505af11580156109d2573d6000803e3d6000fd5b50505060208a01518a51604051631759616b60e11b81526001600160a01b0385169350632eb2c2d692610a0d928992899291906004016128c4565b600060405180830381600087803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b50505050826001600160a01b0316816001600160a01b03167f1c11c91cd5355f3d8407dbd748531d95bc439de3c345b1ac626c0712fd954f728b602001518a606001518e604051610a8e9392919061291f565b60405180910390a350506001609a555050505050505050505050565b60675460ff166102305760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610288565b609960009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6a91906125be565b6001600160a01b0316336001600160a01b03161461023057604051637a8e0b8960e11b815260040160405180910390fd5b610ba3610aaa565b6067805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60675460ff16156102305760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610288565b80516000907fe12da5126137442eee6aa47b09af013f90ebdd5c92e75d9a3badef17abb89d3490610c6390611472565b610c7084602001516114f1565b84604001518560600151604051602001610cac959493929190948552602085019390935260408401919091526060830152608082015260a00190565b604051602081830303815290604052805190602001209050919050565b6000610d17610cd661155e565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b610d2a888888888861159a565b876001600160a01b0316632b7ac3f36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8c91906125be565b6001600160a01b0316610dd58484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506116fb92505050565b6001600160a01b031614610dfc57604051636e4c66dd60e11b815260040160405180910390fd5b5050505050505050565b60405163152a902d60e11b81526004810183905260248101829052600090819081906001600160a01b03891690632a55205a906044016040805180830381865afa158015610e58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7c919061294d565b92509050610e8c878c838561171f565b5061271083860204610ea0878c8c8461171f565b610eb0878c8b848689030361171f565b5015159998505050505050505050565b836001600160a01b031663bb24fe8a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610efe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f22919061297b565b6102d11461102557604080820151602083015160608401516080850151935163bc68fe3160e01b81526001600160a01b0389169463bc68fe3194610f6f9490938c938f9390600401612852565b600060405180830381600087803b158015610f8957600080fd5b505af1158015610f9d573d6000803e3d6000fd5b5050604051637921219560e11b81526001600160a01b0388811660048301528981166024830152604482018790526064820186905260a06084830152600060a48301528716925063f242432a915060c401600060405180830381600087803b15801561100857600080fd5b505af115801561101c573d6000803e3d6000fd5b50505050611134565b6040808201516020830151606084015160808501519351630d11059d60e21b81526004810188905260248101939093526001600160a01b038b8116604485015260ff9092166064840152608483015260a48201929092529085169063344416749060c401600060405180830381600087803b1580156110a357600080fd5b505af11580156110b7573d6000803e3d6000fd5b5050604051635c46a7ef60e11b81526001600160a01b03888116600483015289811660248301526044820187905260806064830152600060848301528716925063b88d4fde915060a401600060405180830381600087803b15801561111b57600080fd5b505af115801561112f573d6000803e3d6000fd5b505050505b50505050505050565b611145610bed565b6067805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610bd03390565b6001600160a01b0381166111a157604051637b7be04f60e01b815260040160405180910390fd5b50565b600054610100900460ff166111cb5760405162461bcd60e51b815260040161028890612994565b6111d4826117c8565b6111e06103e8826129df565b60cc556111eb61181a565b6111f3611849565b61123a60405180604001604052600b8152806020016a4d61726b6574706c61636560a81b81525060405180604001604052806002815260200161763160f01b815250611878565b5050565b60007fcfcb4da075a0d56b79ee3b56f70cb4cdcda5e155a086ae0a84cda374e2105f71611278611273368590038501856124f1565b611472565b611297611289610180860186612259565b61129290612779565b6118a9565b60408051602081019490945283019190915260608201526101a083013560808201526101c083013560a082015260c001610cac565b60006112f96040518060800160405280606081526020016060815260200160608152602001606081525090565b60cc54600080805b8651518110156113f0578660200151818151811061132157611321612824565b6020026020010151915061133b8c8e8d8d8d89888f610e06565b9250826113e857818560200151878151811061135957611359612824565b6020908102919091010152865180518290811061137857611378612824565b60200260200101518560000151878151811061139657611396612824565b602002602001018181525050866060015181815181106113b8576113b8612824565b6020026020010151856060015187815181106113d6576113d6612824565b60200260200101819052508560010195505b600101611301565b50505050816000146114675760208101518151606083015160405163a55784ef60e01b81526001600160a01b038a169363a55784ef93611434938d93600401612a01565b600060405180830381600087803b15801561144e57600080fd5b505af1158015611462573d6000803e3d6000fd5b505050505b505050505050505050565b80516000907f6e454651a1dcd0f7216467b9d24177e22fb1c1a0fe79e0191caaf33b1b2d22ad906114a2906119d6565b6114af84602001516119d6565b6040808601516060808801518351602081019790975292860194909452928401919091526001600160a01b0391821660808401521660a082015260c001610cac565b805160208083015160408085015160608601518051908501209151600095610cac957fbb947806069955a6c604055c1ed4c84bcab0a154ff5365158c52c141bb25852d95919491939201948552602085019390935260408401919091526060830152608082015260a00190565b60006115957f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61158d60015490565b600254611a54565b905090565b60405163159d87fd60e31b81526001600160a01b03848116600483015286169063acec3fe890602401602060405180830381865afa1580156115e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116049190612a9a565b6116415734821461162857604051637e6a1fad60e11b815260040160405180910390fd5b604051631778507f60e11b815260040160405180910390fd5b6040516370a0823160e01b81526001600160a01b038581166004830152600091908516906370a0823190602401602060405180830381865afa15801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af919061297b565b9050828110156116d257604051637e6a1fad60e11b815260040160405180910390fd5b50804211156116f457604051630f99aadf60e31b815260040160405180910390fd5b5050505050565b600080600061170a8585611a9e565b9150915061171781611b0c565b509392505050565b80156117c2576001600160a01b0384166117ad576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611780576040519150601f19603f3d011682016040523d82523d6000602084013e611785565b606091505b50509050806117a757604051633eed30b360e01b815260040160405180910390fd5b506117c2565b6117c26001600160a01b038516848484611cc2565b50505050565b600054610100900460ff166117ef5760405162461bcd60e51b815260040161028890612994565b6117f88161117a565b609980546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff166118415760405162461bcd60e51b815260040161028890612994565b610230611d1c565b600054610100900460ff166118705760405162461bcd60e51b815260040161028890612994565b610230611d4f565b600054610100900460ff1661189f5760405162461bcd60e51b815260040161028890612994565b61123a8282611d7d565b606081015151600090818167ffffffffffffffff8111156118cc576118cc612279565b6040519080825280602002602001820160405280156118f5578160200160208202803683370190505b50905060005b8281101561194d578460600151818151811061191957611919612824565b60200260200101518051906020012082828151811061193a5761193a612824565b60209081029190910101526001016118fb565b50835160208086015160408088015190517f97a8084b05295a1a0b029b05bda73d5917d940d10e22aa7b9d94f19a379e7bf8949361198d91879101612abc565b604051602081830303815290604052805190602001206040516020016119b7959493929190612af2565b6040516020818303038152906040528051906020012092505050919050565b8051602080830151604080850151606086015160808701519251600096610cac967f608b3f6b5846eeb165cc065962f4f67e8bc514fff7e7931191b734587342754996919591949392019586526001600160a01b0394909416602086015260ff9290921660408501526060840152608083015260a082015260c00190565b6040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090505b9392505050565b6000808251604103611ad45760208301516040840151606085015160001a611ac887828585611dbe565b94509450505050611b05565b8251604003611afd5760208301516040840151611af2868383611eab565b935093505050611b05565b506000905060025b9250929050565b6000816004811115611b2057611b20612b44565b03611b285750565b6001816004811115611b3c57611b3c612b44565b03611b895760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610288565b6002816004811115611b9d57611b9d612b44565b03611bea5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610288565b6003816004811115611bfe57611bfe612b44565b03611c565760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610288565b6004816004811115611c6a57611c6a612b44565b036111a15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610288565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526117c2908590611ee4565b600054610100900460ff16611d435760405162461bcd60e51b815260040161028890612994565b6067805460ff19169055565b600054610100900460ff16611d765760405162461bcd60e51b815260040161028890612994565b6001609a55565b600054610100900460ff16611da45760405162461bcd60e51b815260040161028890612994565b815160209283012081519190920120600191909155600255565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611df55750600090506003611ea2565b8460ff16601b14158015611e0d57508460ff16601c14155b15611e1e5750600090506004611ea2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611e72573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611e9b57600060019250925050611ea2565b9150600090505b94509492505050565b6000806001600160ff1b03831681611ec860ff86901c601b61283a565b9050611ed687828885611dbe565b935093505050935093915050565b6000611f39826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611fb69092919063ffffffff16565b8051909150156106ef5780806020019051810190611f579190612a9a565b6106ef5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610288565b6060611fc58484600085611fcd565b949350505050565b60608247101561202e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610288565b6001600160a01b0385163b6120855760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610288565b600080866001600160a01b031685876040516120a19190612b5a565b60006040518083038185875af1925050503d80600081146120de576040519150601f19603f3d011682016040523d82523d6000602084013e6120e3565b606091505b50915091506120f38282866120fe565b979650505050505050565b6060831561210d575081611a97565b82511561211d5782518084602001fd5b8160405162461bcd60e51b81526004016102889190612b6c565b60006101e0828403121561214a57600080fd5b50919050565b60008083601f84011261216257600080fd5b50813567ffffffffffffffff81111561217a57600080fd5b602083019150836020828501011115611b0557600080fd5b6000806000604084860312156121a757600080fd5b833567ffffffffffffffff808211156121bf57600080fd5b6121cb87838801612137565b945060208601359150808211156121e157600080fd5b506121ee86828701612150565b9497909650939450505050565b6001600160a01b03811681146111a157600080fd5b60006020828403121561222257600080fd5b8135611a97816121fb565b6000806040838503121561224057600080fd5b823561224b816121fb565b946020939093013593505050565b60008235607e1983360301811261226f57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156122b2576122b2612279565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156122e1576122e1612279565b604052919050565b600082601f8301126122fa57600080fd5b813567ffffffffffffffff81111561231457612314612279565b612327601f8201601f19166020016122b8565b81815284602083860101111561233c57600080fd5b816020850160208301376000918101602001919091529392505050565b60006080828403121561236b57600080fd5b61237361228f565b9050813581526020820135602082015260408201356040820152606082013567ffffffffffffffff8111156123a757600080fd5b6123b3848285016122e9565b60608301525092915050565b6000610d173683612359565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156123fb576123fb6123cb565b500290565b600060a0828403121561241257600080fd5b60405160a0810181811067ffffffffffffffff8211171561243557612435612279565b6040529050808235612446816121fb565b8152602083013560ff8116811461245c57600080fd5b806020830152506040830135604082015260608301356060820152608083013560808201525092915050565b6000610180828403121561249b57600080fd5b6124a361228f565b90506124af8383612400565b81526124be8360a08401612400565b60208201526101408201356124d2816121fb565b60408201526101608201356124e6816121fb565b606082015292915050565b6000610180828403121561250457600080fd5b611a978383612488565b60006101e0823603121561252157600080fd5b61252961228f565b6125333684612488565b815261018083013567ffffffffffffffff81111561255057600080fd5b61255c36828601612359565b6020830152506101a083013560408201526101c09092013560608301525090565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6000602082840312156125d057600080fd5b8151611a97816121fb565b60005b838110156125f65781810151838201526020016125de565b838111156117c25750506000910152565b6000815180845261261f8160208601602086016125db565b601f01601f19169290920160200192915050565b60018060a01b03851681528360208201528260408201526080606082015260006126606080830184612607565b9695505050505050565b600067ffffffffffffffff82111561268457612684612279565b5060051b60200190565b600082601f83011261269f57600080fd5b813560206126b46126af8361266a565b6122b8565b82815260059290921b840181019181810190868411156126d357600080fd5b8286015b848110156126ee57803583529183019183016126d7565b509695505050505050565b600082601f83011261270a57600080fd5b8135602061271a6126af8361266a565b82815260059290921b8401810191818101908684111561273957600080fd5b8286015b848110156126ee57803567ffffffffffffffff81111561275d5760008081fd5b61276b8986838b01016122e9565b84525091830191830161273d565b60006080823603121561278b57600080fd5b61279361228f565b823567ffffffffffffffff808211156127ab57600080fd5b6127b73683870161268e565b835260208501359150808211156127cd57600080fd5b6127d93683870161268e565b602084015260408501359150808211156127f257600080fd5b6127fe3683870161268e565b6040840152606085013591508082111561281757600080fd5b506123b3368286016126f9565b634e487b7160e01b600052603260045260246000fd5b6000821982111561284d5761284d6123cb565b500190565b9586526001600160a01b03948516602087015292909316604085015260ff166060840152608083019190915260a082015260c00190565b600081518084526020808501945080840160005b838110156128b95781518752958201959082019060010161289d565b509495945050505050565b6001600160a01b0385811682528416602082015260a0604082018190526000906128f090830185612889565b82810360608401526129028185612889565b838103608090940193909352505060008152602001949350505050565b6060815260006129326060830186612889565b6001600160a01b039490941660208301525060400152919050565b6000806040838503121561296057600080fd5b825161296b816121fb565b6020939093015192949293505050565b60006020828403121561298d57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000826129fc57634e487b7160e01b600052601260045260246000fd5b500690565b6001600160a01b038516815260806020808301829052600091612a2690840187612889565b8381036040850152612a388187612889565b905083810360608501528085518083528383019150838160051b84010184880160005b83811015612a8957601f19868403018552612a77838351612607565b94870194925090860190600101612a5b565b50909b9a5050505050505050505050565b600060208284031215612aac57600080fd5b81518015158114611a9757600080fd5b815160009082906020808601845b83811015612ae657815185529382019390820190600101612aca565b50929695505050505050565b85815260a060208201526000612b0b60a0830187612889565b8281036040840152612b1d8187612889565b90508281036060840152612b318186612889565b9150508260808301529695505050505050565b634e487b7160e01b600052602160045260246000fd5b6000825161226f8184602087016125db565b602081526000611a97602083018461260756fea264697066735822122021dfa1d4ace864afbd3fc8925e68de52207829b292235e43356283c386c0c31264736f6c634300080f0033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Marketplace> {
    return super.deploy(overrides || {}) as Promise<Marketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  override connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
