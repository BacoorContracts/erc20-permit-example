/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTFactory,
  NFTFactoryInterface,
} from "../../contracts/NFTFactory";

const _abi = [
  {
    inputs: [],
    name: "Factory__ExecutionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Factory__InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Factory__Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "MPI__DelegatecallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "MPI__NonZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MPI__Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddr",
        type: "address",
      },
    ],
    name: "GovernanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "standard_",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployedAddr_",
        type: "address",
      },
    ],
    name: "TokenDeployed",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "contract IGovernance",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implement_",
        type: "address",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "deployCollectible",
    outputs: [
      {
        internalType: "address",
        name: "clone",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deployedContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr_",
        type: "address",
      },
    ],
    name: "updateGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a17806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80639ad1ee1014610067578063b2561263146100ad578063c4d66de8146100c2578063f851a440146100d5578063fb98d453146100e8578063ffa1ad74146100fb575b600080fd5b6100906100753660046106dd565b6034602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c06100bb36600461070b565b610130565b005b6100c06100d036600461070b565b61018b565b603354610090906001600160a01b031681565b6100906100f6366004610778565b6102a3565b6101227fc42665b4953fdd2cb30dcf1befa0156911485f4e84e3f90b1360ddfb4fa2f76681565b6040519081526020016100a4565b6101386104cd565b61014181610577565b603380546001600160a01b0319166001600160a01b0383169081179091556040517f9d3e522e1e47a2f6009739342b9cc7b252a1888154e843ab55ee1c81745795ab90600090a250565b600054610100900460ff16158080156101ab5750600054600160ff909116105b806101c55750303b1580156101c5575060005460ff166001145b61022d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610250576000805461ff0019166101001790555b610259826105a1565b801561029f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b604051600090339082906102e7907fc42665b4953fdd2cb30dcf1befa0156911485f4e84e3f90b1360ddfb4fa2f766908b908b908b908b908b908b90602001610825565b60408051601f19818403018152919052805160209091012090506103146001600160a01b038b1682610637565b6033546040519194506000916001600160a01b0380871692631f97af7160e11b92610353929091169087908f908f908f908f908f908f90602001610893565b60408051601f19818403018152908290526103719291602001610932565b60408051601f198184030181529082905261038b91610956565b6000604051808303816000865af19150503d80600081146103c8576040519150601f19603f3d011682016040523d82523d6000602084013e6103cd565b606091505b50509050806103ef57604051633bf18d8360e01b815260040160405180910390fd5b60008281526034602090815260409182902080546001600160a01b0319166001600160a01b038881169182179092558351635d927f4560e11b81529351909391871692849263bb24fe8a92600480830193928290030181865afa15801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e9190610962565b7fa6fb4e8d8f628db986c9c1fb270df4ab20ba5c756adea6bb17fe2e941bcde2b68d8d8d8d8d8d6040516104b79695949392919061097b565b60405180910390a4505050979650505050505050565b603360009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610520573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054491906109c4565b6001600160a01b0316336001600160a01b03161461057557604051637a8e0b8960e11b815260040160405180910390fd5b565b6001600160a01b03811661059e57604051637b7be04f60e01b815260040160405180910390fd5b50565b600054610100900460ff1661060c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610224565b61061581610577565b603380546001600160a01b0319166001600160a01b0392909216919091179055565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166106d75760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610224565b92915050565b6000602082840312156106ef57600080fd5b5035919050565b6001600160a01b038116811461059e57600080fd5b60006020828403121561071d57600080fd5b8135610728816106f6565b9392505050565b60008083601f84011261074157600080fd5b50813567ffffffffffffffff81111561075957600080fd5b60208301915083602082850101111561077157600080fd5b9250929050565b60008060008060008060006080888a03121561079357600080fd5b873561079e816106f6565b9650602088013567ffffffffffffffff808211156107bb57600080fd5b6107c78b838c0161072f565b909850965060408a01359150808211156107e057600080fd5b6107ec8b838c0161072f565b909650945060608a013591508082111561080557600080fd5b506108128a828b0161072f565b989b979a50959850939692959293505050565b87815285876020830137600086820160208101600081528688823750858101905060208101600081528486823750600093016020019283525090979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a0604082018190526000906108c0908301888a61086a565b82810360608401526108d381878961086a565b905082810360808401526108e881858761086a565b9b9a5050505050505050505050565b6000815160005b8181101561091857602081850181015186830152016108fe565b81811115610927576000828601525b509290920192915050565b6001600160e01b031983168152600061094e60048301846108f7565b949350505050565b600061072882846108f7565b60006020828403121561097457600080fd5b5051919050565b60608152600061098f60608301888a61086a565b82810360208401526109a281878961086a565b905082810360408401526109b781858761086a565b9998505050505050505050565b6000602082840312156109d657600080fd5b8151610728816106f656fea2646970667358221220b5aeb84be7aa17651aec63381ed9aaadc988832945ae7e068a909a50806a1b8764736f6c634300080f0033";

type NFTFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTFactory__factory extends ContractFactory {
  constructor(...args: NFTFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTFactory> {
    return super.deploy(overrides || {}) as Promise<NFTFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTFactory {
    return super.attach(address) as NFTFactory;
  }
  override connect(signer: Signer): NFTFactory__factory {
    return super.connect(signer) as NFTFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTFactoryInterface {
    return new utils.Interface(_abi) as NFTFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTFactory {
    return new Contract(address, _abi, signerOrProvider) as NFTFactory;
  }
}
