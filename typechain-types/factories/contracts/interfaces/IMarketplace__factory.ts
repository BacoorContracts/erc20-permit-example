/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMarketplace,
  IMarketplaceInterface,
} from "../../../contracts/interfaces/IMarketplace";

const _abi = [
  {
    inputs: [],
    name: "MP__ExecutionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "MP__InvalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "MP__LengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "MP__PaymentFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "MP__Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "BulkRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "ItemRedeemed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "serviceFeeRightShiftBit_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "deadline",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct ReceiptUtil.User",
                name: "buyer",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "deadline",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct ReceiptUtil.User",
                name: "seller",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "nftContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
            ],
            internalType: "struct ReceiptUtil.Header",
            name: "header",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unitPrice",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "tokenURI",
                type: "string",
              },
            ],
            internalType: "struct ReceiptUtil.Item",
            name: "item",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ReceiptUtil.Receipt",
        name: "receipt_",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature_",
        type: "bytes",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "deadline",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct ReceiptUtil.User",
                name: "buyer",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "deadline",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32",
                  },
                ],
                internalType: "struct ReceiptUtil.User",
                name: "seller",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "nftContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymentToken",
                type: "address",
              },
            ],
            internalType: "struct ReceiptUtil.Header",
            name: "header",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "amounts",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "tokenIds",
                type: "uint256[]",
              },
              {
                internalType: "uint256[]",
                name: "unitPrices",
                type: "uint256[]",
              },
              {
                internalType: "string[]",
                name: "tokenURIs",
                type: "string[]",
              },
            ],
            internalType: "struct ReceiptUtil.Bulk",
            name: "bulk",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ReceiptUtil.BulkReceipt",
        name: "receipt_",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature_",
        type: "bytes",
      },
    ],
    name: "redeemBulk",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IMarketplace__factory {
  static readonly abi = _abi;
  static createInterface(): IMarketplaceInterface {
    return new utils.Interface(_abi) as IMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMarketplace {
    return new Contract(address, _abi, signerOrProvider) as IMarketplace;
  }
}
