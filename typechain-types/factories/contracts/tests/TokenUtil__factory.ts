/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TokenUtil,
  TokenUtilInterface,
} from "../../../contracts/tests/TokenUtil";

const _abi = [
  {
    inputs: [],
    name: "ADDRESS_BIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_BIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_MAX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_BIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_MAX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUPPLY_BIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUPPLY_MAX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE_BIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TYPE_MAX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "type_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator_",
        type: "address",
      },
    ],
    name: "createTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
    ],
    name: "getCreatorFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
    ],
    name: "getTokenCreator",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getTokenIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
    ],
    name: "getTokenMaxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
    ],
    name: "getTokenType",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenType",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6102e661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100ff5760003560e01c8063958f6ed6116100a1578063c73099bc11610070578063c73099bc1461018d578063f1af9d3f146101c9578063fb5100d1146101dc578063fbe25d0e146101e457600080fd5b8063958f6ed61461011f5780639c0b799814610185578063afbf292614610185578063c2624e1e1461012a57600080fd5b80633a663c80116100dd5780633a663c80146101335780633e82f01c1461010457806376aed2e114610146578063934689a91461015957600080fd5b80630d992c4e14610104578063193e7cee1461011f57806320ed54591461012a575b600080fd5b61010c601081565b6040519081526020015b60405180910390f35b61010c63ffffffff81565b61010c61ffff81565b61010c61014136600461023e565b6101f7565b61010c61015436600461023e565b610209565b61016d61016736600461023e565b60601c90565b6040516001600160a01b039091168152602001610116565b61010c602081565b61010c61019b366004610257565b60601b6bffffffffffffffffffffffff191660409290921b60309390931b60209490941b1792909217171790565b61010c6101d736600461023e565b61021a565b61010c60a081565b61010c6101f236600461023e565b61022b565b600063ffffffff8281165b0692915050565b600061ffff603083901c8116610202565b600061ffff602083901c8116610202565b600063ffffffff604083901c8116610202565b60006020828403121561025057600080fd5b5035919050565b600080600080600060a0868803121561026f57600080fd5b8535945060208601359350604086013592506060860135915060808601356001600160a01b03811681146102a257600080fd5b80915050929550929590935056fea264697066735822122093f341e2d6304562675f2d405b8fb6e9df9e4186bd34791024ba1b4c7dd9e4c864736f6c634300080f0033";

type TokenUtilConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenUtilConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenUtil__factory extends ContractFactory {
  constructor(...args: TokenUtilConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenUtil> {
    return super.deploy(overrides || {}) as Promise<TokenUtil>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenUtil {
    return super.attach(address) as TokenUtil;
  }
  override connect(signer: Signer): TokenUtil__factory {
    return super.connect(signer) as TokenUtil__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenUtilInterface {
    return new utils.Interface(_abi) as TokenUtilInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenUtil {
    return new Contract(address, _abi, signerOrProvider) as TokenUtil;
  }
}
